import Head from "next/head";
import styles from "./index.module.css";
import Hero from "../sections/Hero";
import Nav from "../sections/Nav";
import Footer from "../sections/Footer";
import CTA from "../sections/CTA";
import DynamicComponent from "../sections/DynamicComponent";

import { groq } from "next-sanity";
import { getClient } from "../../lib/sanity.server";

const Home = ({ data }) => {
  const { hero, content, cta } = data;

  return (
    <div className={styles.container}>
      <Head>
        <title>Planet Caravan</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header>
        <Nav />
        <Hero
          heading={hero.heading}
          paragraph={hero.paragraph}
          buttonText={hero.buttonText}
          buttonUrl={hero.buttonUrl}
          buttonDescription={hero.buttonDescription}
          caravansList={hero.featuredProducts}
        />
      </header>

      <main className={styles.main}>
        {content.map((item) => DynamicComponent(item))}
      </main>
      <CTA left={cta.left} right={cta.right} />
      <footer>
        <Footer />
      </footer>
    </div>
  );
};

export const getStaticProps = async ({ preview = false }) => {
  const query = groq`*[_type == "landingPage" && name == 'main'][0]{
    hero{
      ...,
      featuredProducts[]->{
        name, price,
        image{
          imageAlt,
          asset->
        }
      }
    },
    "content" : contentBuilder[]{
      _type == 'contentCards' => {
        _type, _key, heading,
        cards[]->{
          ...,
          image{
            imageAlt,
            asset->
          }
        }
      },
      _type == 'contentImage' => {
        _type, _key, image{imageAlt,asset->}
      },
      _type == 'contentText' => {
        _type, _key, heading, column1text, column2text
      }
    },
    "cta": {
      "left": leftCTA{
        ...,
        columnImage{
          imageAlt,
          asset->
        }
      },
      "right": rightCTA{
        ...,
        columnImage{
          imageAlt,
          asset->
        }
      }
    }
    
  }`;

  const data = await getClient(preview).fetch(query);

  return {
    props: {
      data: data,
    },
  };
};

export default Home;
